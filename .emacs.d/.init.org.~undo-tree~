(undo-tree-save-format-version . 1)
"96ad1c5b4232d73e164b1cbb9450746190764a96"
[nil nil nil nil (26537 7789 725044 143000) 0 nil]
([nil nil ((#("(use-package evil-nerd-commenter)
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 12 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 12 13 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 13 32 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 32 33 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 33 34 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 2706) (undo-tree-id0 . -28) (undo-tree-id1 . -28) (undo-tree-id2 . -33) 2734 (t 26537 7722 351586 621000)) nil (26537 7789 725041 323000) 0 nil])
([nil nil ((2821 . 2822) (t 26537 7789 726772 458000) 2802) nil (26537 7978 691482 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2900 . 2901) (nil fontified nil 2822 . 2901) (2822 . 2901)) nil (26537 7978 691482 337000) 0 nil])
([nil nil ((2895 . 2896) (#("0" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2895) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 2896 (2887 . 2893) (#(" " 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2887) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 2888 (2879 . 2888) (#("D" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2879) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("e" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2880) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("j" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2881) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("a" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2882) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#("V" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2883) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("u" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2884) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#(" " 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2885) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (#("S" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2886) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (#("a" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2887) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (#("n" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2888) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (#("s" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2889) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (#(" " 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2890) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("M" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2891) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (#("o" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2892) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (#("n" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -2893) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (#("o" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -2894) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) 2895) nil (26537 7978 691470 7000) 0 nil])
([nil nil ((2899 . 2900) (t 26537 7978 693274 92000) 2895) nil (26537 7983 392894 757000) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 2900) (undo-tree-id788 . 1) (undo-tree-id789 . -1)) nil (26537 7983 392892 297000) 0 nil])
([nil nil ((#("(use-package projectile
  :config
  (projectile-mode 1)
  (define-key projectile-mode-map (kbd \"C-c p\") 'projectile-command-map))
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 12 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 12 13 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 13 23 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 23 24 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 24 26 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 26 33 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 33 34 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 34 36 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 36 37 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 37 54 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 54 55 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 55 56 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 56 58 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 58 59 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 59 90 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 90 91 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 91 95 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 95 102 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 102 103 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 103 127 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 127 128 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 128 129 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 129 130 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 3686) (undo-tree-id0 . -129) (undo-tree-id1 . -129) (undo-tree-id2 . -129) (undo-tree-id3 . -129) 3815 (t 26537 7983 394286 261000)) nil (26537 8214 396309 382000) 0 nil])
([nil nil ((4774 . 4775) 4759) nil (26537 8214 396289 262000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4904 . 4905) (nil fontified nil 4775 . 4905) (4775 . 4905)) nil (26537 8214 396286 312000) 0 nil])
([nil nil ((3178 . 3197) (3169 . 3178) (#("dashboa" 0 7 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -3169) (undo-tree-id0 . -7) 3176 (3169 . 3176) (3168 . 3170) (#(" " 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -3168) (undo-tree-id1 . -1) 3169 (3165 . 3169) (3157 . 3165) (#(":" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -3157) (undo-tree-id2 . -1) 3158 (3157 . 3158) (3156 . 3157) (3137 . 3156) (#("o" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -3137) (undo-tree-id3 . -1) 3138 (3135 . 3138) (3134 . 3136) (3133 . 3134) (t 26537 8214 400870 293000) 3120) nil (26537 18639 250756 626000) 0 nil])
([nil nil ((2553 . 2554) (t 26537 18639 253925 783000) 2552) nil (26537 18727 116676 264000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2585 . 2586) (nil fontified nil 2554 . 2586) (2554 . 2586)) nil (26537 18727 116672 234000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 5665) (t 26537 18727 120114 101000)) nil (26537 18891 76921 677000) 0 nil])
([nil nil ((3202 . 3206) (3201 . 3202) (t 26537 18891 79472 93000)) nil (26537 24882 447935 657000) 0 nil])
([nil nil ((3201 . 3202) 3193) nil (26537 24882 447935 297000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3268 . 3269) (nil fontified nil 3202 . 3269) (3202 . 3269)) nil (26537 24882 447934 957000) 0 nil])
([nil nil (3268) nil (26537 24882 447934 537000) 0 nil])
([nil nil ((3202 . 3206)) nil (26537 24882 447934 307000) 0 nil])
([nil nil ((#("    (setq initial-buffer-choice (lambda () (get-buffer \"*dashboard*\")))
" 0 4 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 5 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 9 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 9 32 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 32 33 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 33 39 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 39 40 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 40 41 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 41 42 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 42 43 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 43 44 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 44 55 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 55 56 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 56 57 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t font-lock-fontified t fontified t) 57 66 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t font-lock-fontified t fontified t) 66 67 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t font-lock-fontified t fontified t) 67 68 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 68 69 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 69 70 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 70 71 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t) 71 72 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 3202) (undo-tree-id15 . 68) (undo-tree-id16 . -71) (undo-tree-id17 . -70) (undo-tree-id18 . -70) (undo-tree-id19 . -70) (undo-tree-id20 . -70) (undo-tree-id21 . -70) (undo-tree-id22 . -70) (undo-tree-id23 . -70) (undo-tree-id24 . -70) (undo-tree-id25 . -70) (undo-tree-id26 . -70) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -72) 3205) nil (26537 24882 447933 197000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3241 . 3242) (#("
" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -3309) (3237 . 3310) 3205) nil (26537 24882 447902 757000) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -3236) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 3237) nil (26537 24882 447901 907000) 0 nil])
([nil current ((3308 . 3309) (#(")" 0 1 (fontified nil)) . -3308) (3308 . 3309)) nil (26537 24882 447874 967000) 0 nil])
nil
